/**
 * Vulnerability Scanner Service - Phase 2 Core Implementation
 * Multi-source vulnerability aggregation with intelligent risk assessment
 */
import type { Package, VulnerabilityReport, SecurityDataSource, VulnerabilityScanOptions, VulnerabilityScanResult } from '../../types';
/**
 * Enterprise-grade vulnerability scanner with multi-source intelligence
 */
export declare class VulnerabilityScanner {
    private dataSources;
    private readonly maxConcurrentScans;
    private readonly scanTimeoutMs;
    constructor(dataSources?: SecurityDataSource[]);
    /**
     * Register a new security data source
     */
    registerDataSource(dataSource: SecurityDataSource): void;
    /**
     * Scan a single package for vulnerabilities
     */
    scanPackage(pkg: Package, options?: VulnerabilityScanOptions): Promise<VulnerabilityReport>;
    /**
     * Scan multiple packages with intelligent batching
     */
    scanPackages(packages: Package[], options?: VulnerabilityScanOptions): Promise<VulnerabilityScanResult>;
    /**
     * Scan package across all configured data sources
     */
    private scanAcrossDataSources;
    /**
     * Merge and deduplicate vulnerabilities from multiple sources
     */
    private mergeVulnerabilities;
    /**
     * Generate a unique key for vulnerability deduplication
     */
    private generateVulnerabilityKey;
    /**
     * Merge vulnerability data from multiple sources
     */
    private mergeVulnerabilityData;
    /**
     * Assess risk for a package based on vulnerabilities and context
     */
    private assessRisk;
    /**
     * Generate actionable recommendations based on vulnerabilities
     */
    private generateRecommendations;
    /**
     * Create batches for concurrent processing
     */
    private createBatches;
    /**
     * Create a timeout promise for data source requests
     */
    private createTimeoutPromise;
}
/**
 * Factory function for creating vulnerability scanner
 */
export declare function createVulnerabilityScanner(dataSources?: SecurityDataSource[]): VulnerabilityScanner;
//# sourceMappingURL=vulnerability-scanner.d.ts.map